package com.example.queueview.data.model

import com.google.firebase.Timestamp
import kotlin.math.max

data class QueueData(
    val id: String = "",  // Auto-generated by Firestore
    val placeName: String = "",
    val placeType: String = "BANK",  // Can be "BANK", "RESTAURANT", "HOSPITAL"
    val latitude: Double = 0.0,
    val longitude: Double = 0.0,
    val waitingTime: Int = 0,  // in minutes
    val lastUpdated: Timestamp = Timestamp.now(),
    val submittedBy: String? = null,
    val initialWaitTime: Int = waitingTime,
    val wasAveraged: Boolean = false
){

    // Add this computed property
    val currentWaitTime: Int
        get() {
            val minutesPassed = (Timestamp.now().seconds - lastUpdated.seconds) / 60
            return max(0, waitingTime - minutesPassed.toInt())
        }

    fun toMap():Map<String, Any?> {
        return mapOf(
            "placeName" to placeName,
            "placeType" to placeType,
            "latitude" to latitude,
            "longitude" to longitude,
            "waitingTime" to waitingTime,
            "lastUpdated" to lastUpdated,
            "submittedBy" to submittedBy
        )
    }
}

data class ObservableQueueData(
    val queueData: QueueData,
    var currentWaitTime: Int = queueData.currentWaitTime
) {
    fun updateTime() {
        currentWaitTime = queueData.currentWaitTime
    }
}
